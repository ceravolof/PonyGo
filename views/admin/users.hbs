<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestione Utenti - Admin PonyGo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .nav-link {
            font-weight: 500;
            position: relative;
        }
        
        .nav-link.active::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 2px;
            background-color: #ffffff;
            bottom: 0;
            left: 0;
        }
        
        .offcanvas-body .nav-link {
            padding: 12px 16px;
            margin: 5px 0;
            border-radius: 8px;
        }
        
        .offcanvas-body .nav-link:hover {
            background-color: #343a40;
        }
        
        .table-container {
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            padding: 20px;
            margin-bottom: 25px;
            overflow: hidden;
        }
        
        .table-responsive {
            overflow-x: auto;
        }
        
        .table {
            margin-bottom: 0;
        }
        
        .table thead th {
            border-top: none;
            vertical-align: middle;
            font-weight: 600;
        }
        
        .table tbody tr {
            transition: all 0.2s ease;
        }
        
        .table tbody tr:hover {
            background-color: rgba(67, 97, 238, 0.05);
        }
        
        .badge-role {
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.85em;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .badge-admin {
            background-color: #dc3545;
            color: white;
        }
        
        .badge-pizzaiolo {
            background-color: #fd7e14;
            color: white;
        }
        
        .badge-user {
            background-color: #0d6efd;
            color: white;
        }
        
        .btn-action {
            margin: 0 3px;
            width: 32px;
            height: 32px;
            padding: 0;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            transition: all 0.2s ease;
        }
        
        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
        }
        
        .header-section {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            margin-bottom: 25px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .btn-add-user {
            background-color: #38b000;
            border-color: #38b000;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            font-weight: 600;
        }
        
        .btn-add-user:hover {
            background-color: #2d9900;
            border-color: #2d9900;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(56, 176, 0, 0.3);
        }
        
        .modal-content {
            border: none;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }
        
        .modal-header {
            border-bottom: 1px solid rgba(0, 0, 0, 0.08);
            padding: 15px 20px;
        }
        
        .modal-body {
            padding: 20px;
        }
        
        .modal-footer {
            border-top: 1px solid rgba(0, 0, 0, 0.08);
            padding: 15px 20px;
        }
        
        .form-label {
            font-weight: 500;
            margin-bottom: 8px;
            color: #495057;
        }
        
        .form-control {
            border-radius: 8px;
            padding: 10px 15px;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .form-control:focus {
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
            border-color: #4361ee;
        }
        
        .form-select {
            border-radius: 8px;
            padding: 10px 15px;
            height: auto;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .form-select:focus {
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
            border-color: #4361ee;
        }
        
        .form-text {
            color: #6c757d;
            font-size: 0.85rem;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <i class="bi bi-bicycle text-warning"></i> PonyGo Admin
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">
                        <i class="bi bi-menu-button-wide-fill me-2"></i> Menu
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="/home">
                                <i class="bi bi-house-door-fill me-2"></i> Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/users">
                                <i class="bi bi-people-fill me-2"></i> Gestisci Utenti
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/swag">
                                <i class="bi bi-file-earmark-code-fill me-2"></i> Swagger API
                            </a>
                        </li>
                    </ul>
                    <button class="btn btn-danger w-100 mt-3" onclick="window.location.href='/logout'">
                        <i class="bi bi-box-arrow-right me-2"></i> Logout
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <div class="container pt-5" style="margin-top: 70px !important;">
        <div class="header-section">
            <h2 class="mb-0 d-flex align-items-center gap-2">
                <i class="bi bi-people text-primary"></i> Gestione Utenti
            </h2>
            <button class="btn btn-success btn-add-user" data-bs-toggle="modal" data-bs-target="#userModal">
                <i class="bi bi-person-plus"></i> Aggiungi Utente
            </button>
        </div>

        <div class="table-container">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Ruolo</th>
                            <th class="text-center">Azioni</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each users}}
                        <tr>
                            <td>{{this.id}}</td>
                            <td class="fw-semibold">{{this.username}}</td>
                            <td>{{this.email}}</td>
                            <td>
                                {{#if (eq this.type "admin")}}
                                <span class="badge badge-role badge-admin">
                                    <i class="bi bi-shield-fill me-1"></i> {{this.type}}
                                </span>
                                {{else if (eq this.type "pizzaiolo")}}
                                <span class="badge badge-role badge-pizzaiolo">
                                    <i class="bi bi-person-workspace me-1"></i> {{this.type}}
                                </span>
                                {{else}}
                                <span class="badge badge-role badge-user">
                                    <i class="bi bi-person-fill me-1"></i> {{this.type}}
                                </span>
                                {{/if}}
                            </td>
                            <td class="text-center">
                                <button class="btn btn-primary btn-action" onclick="editUser({{this.id}}, '{{this.username}}', '{{this.email}}', '{{this.type}}')">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button class="btn btn-danger btn-action" onclick="confirmDelete({{this.id}}, '{{this.username}}')">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Modal for Add/Edit User -->
    <div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title d-flex align-items-center gap-2" id="userModalLabel">
                        <i class="bi bi-person-plus text-success"></i> Aggiungi Utente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="userForm">
                        <input type="hidden" id="userId" name="userId">
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <input type="text" class="form-control" id="username" name="username" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <input type="password" class="form-control" id="password" name="password">
                            </div>
                            <div id="passwordHelpBlock" class="form-text">
                                Lascia vuoto per mantenere la password esistente durante la modifica.
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="type" class="form-label">Ruolo</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                                <select class="form-select" id="type" name="type" required>
                                    <option value="user">User</option>
                                    <option value="pizzaiolo">Pizzaiolo</option>
                                    <option value="admin">Admin</option>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary d-flex align-items-center gap-2" data-bs-dismiss="modal">
                        <i class="bi bi-x-lg"></i> Annulla
                    </button>
                    <button type="button" class="btn btn-primary d-flex align-items-center gap-2" id="saveUserBtn">
                        <i class="bi bi-save"></i> Salva
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Delete Confirmation -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title d-flex align-items-center gap-2" id="deleteModalLabel">
                        <i class="bi bi-exclamation-triangle-fill"></i> Conferma Eliminazione
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Sei sicuro di voler eliminare l'utente <strong id="deleteUserName" class="text-danger"></strong>?</p>
                    <p class="text-danger"><i class="bi bi-exclamation-circle"></i> Questa azione non può essere annullata!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary d-flex align-items-center gap-2" data-bs-dismiss="modal">
                        <i class="bi bi-x-lg"></i> Annulla
                    </button>
                    <button type="button" class="btn btn-danger d-flex align-items-center gap-2" id="confirmDeleteBtn">
                        <i class="bi bi-trash"></i> Elimina
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Variables to store current user being edited/deleted
        let currentUserId = null;
        
        // Modals
        const userModal = new bootstrap.Modal(document.getElementById('userModal'));
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        
        // Edit User Function
        function editUser(id, username, email, type) {
            // Set form title
            document.getElementById('userModalLabel').innerHTML = '<i class="bi bi-pencil-square text-primary"></i> Modifica Utente';
            
            // Fill the form
            document.getElementById('userId').value = id;
            document.getElementById('username').value = username;
            document.getElementById('email').value = email;
            document.getElementById('type').value = type;
            
            // Clear password field - we don't want to show or change password by default
            document.getElementById('password').value = '';
            document.getElementById('passwordHelpBlock').style.display = 'block';
            
            // Open the modal
            userModal.show();
        }
        
        // Add New User (reset form)
        function addUser() {
            // Reset form
            document.getElementById('userForm').reset();
            document.getElementById('userId').value = '';
            document.getElementById('userModalLabel').innerHTML = '<i class="bi bi-person-plus text-success"></i> Aggiungi Utente';
            document.getElementById('passwordHelpBlock').style.display = 'none';
            
            // Open the modal
            userModal.show();
        }
        
        // Confirm Delete
        function confirmDelete(id, username) {
            currentUserId = id;
            document.getElementById('deleteUserName').textContent = username;
            deleteModal.show();
        }
        
        // Save User (Create or Update)
        document.getElementById('saveUserBtn').addEventListener('click', async function() {
            // Get form data
            const userId = document.getElementById('userId').value;
            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const type = document.getElementById('type').value;
            
            // Validate form
            if (!username || !email || (!userId && !password) || !type) {
                alert('Compila tutti i campi richiesti');
                return;
            }
            
            try {
                let url = '/admin/users';
                let method = 'POST';
                
                // If userId exists, it's an update
                if (userId) {
                    url = `/admin/users/${userId}`;
                    method = 'PUT';
                }
                
                // Create request body
                const requestBody = {
                    username,
                    email,
                    type
                };
                
                // Only include password if it was provided (for updates)
                if (password) {
                    requestBody.password = password;
                }
                
                // Send request
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestBody)
                });
                
                if (response.ok) {
                    userModal.hide();
                    // Refresh the page to show updated data
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(`Errore: ${error.message || 'Errore sconosciuto'}`);
                }
            } catch (error) {
                alert(`Errore: ${error.message}`);
            }
        });
        
        // Delete User
        document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
            try {
                const response = await fetch(`/admin/users/${currentUserId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    deleteModal.hide();
                    // Refresh the page
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(`Errore: ${error.message || 'Errore sconosciuto'}`);
                }
            } catch (error) {
                alert(`Errore: ${error.message}`);
            }
        });
        
        // Setup the Add User button
        document.querySelector('.btn-add-user').addEventListener('click', addUser);
    </script>
</body>
</html>