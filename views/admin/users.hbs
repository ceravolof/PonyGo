<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - User List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        .btn-action {
            margin: 0 3px;
        }
        .table-responsive {
            overflow-x: auto;
        }
        .badge-role {
            padding: 5px 10px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.85em;
        }
        .badge-admin {
            background-color: #dc3545;
            color: white;
        }
        .badge-pizzaiolo {
            background-color: #fd7e14;
            color: white;
        }
        .badge-user {
            background-color: #0d6efd;
            color: white;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">PonyGo</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="/home">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/users">Manage Users</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/swag">Swagger</a>
                        </li>
                    </ul>
                    <button class="btn btn-danger w-100" onclick="window.location.href='/logout'">Logout</button>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-5 pt-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>User List</h2>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#userModal">
                <i class="bi bi-person-plus"></i> Aggiungi Utente
            </button>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each users}}
                    <tr>
                        <td>{{this.id}}</td>
                        <td>{{this.username}}</td>
                        <td>{{this.email}}</td>
                        <td>
                            {{#if (eq this.type "admin")}}
                            <span class="badge badge-role badge-admin">{{this.type}}</span>
                            {{else if (eq this.type "pizzaiolo")}}
                            <span class="badge badge-role badge-pizzaiolo">{{this.type}}</span>
                            {{else}}
                            <span class="badge badge-role badge-user">{{this.type}}</span>
                            {{/if}}
                        </td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-primary btn-action" onclick="editUser({{this.id}}, '{{this.username}}', '{{this.email}}', '{{this.type}}')">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-danger btn-action" onclick="confirmDelete({{this.id}}, '{{this.username}}')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    
    <!-- Modal for Add/Edit User -->
    <div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userModalLabel">Add User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="userForm">
                        <input type="hidden" id="userId" name="userId">
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" name="username" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password">
                            <div id="passwordHelpBlock" class="form-text">
                                Leave blank to keep existing password when editing.
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="type" class="form-label">Role</label>
                            <select class="form-select" id="type" name="type" required>
                                <option value="user">User</option>
                                <option value="pizzaiolo">Pizzaiolo</option>
                                <option value="admin">Admin</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveUserBtn">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Delete Confirmation -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                    <p class="text-danger">This action cannot be undone!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Variables to store current user being edited/deleted
        let currentUserId = null;
        
        // Modals
        const userModal = new bootstrap.Modal(document.getElementById('userModal'));
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        
        // Edit User Function
        function editUser(id, username, email, type) {
            // Set form title
            document.getElementById('userModalLabel').textContent = 'Edit User';
            
            // Fill the form
            document.getElementById('userId').value = id;
            document.getElementById('username').value = username;
            document.getElementById('email').value = email;
            document.getElementById('type').value = type;
            
            // Clear password field - we don't want to show or change password by default
            document.getElementById('password').value = '';
            document.getElementById('passwordHelpBlock').style.display = 'block';
            
            // Open the modal
            userModal.show();
        }
        
        // Add New User (reset form)
        function addUser() {
            // Reset form
            document.getElementById('userForm').reset();
            document.getElementById('userId').value = '';
            document.getElementById('userModalLabel').textContent = 'Add User';
            document.getElementById('passwordHelpBlock').style.display = 'none';
            
            // Open the modal
            userModal.show();
        }
        
        // Confirm Delete
        function confirmDelete(id, username) {
            currentUserId = id;
            document.getElementById('deleteUserName').textContent = username;
            deleteModal.show();
        }
        
        // Save User (Create or Update)
        document.getElementById('saveUserBtn').addEventListener('click', async function() {
            // Get form data
            const userId = document.getElementById('userId').value;
            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const type = document.getElementById('type').value;
            
            // Validate form
            if (!username || !email || (!userId && !password) || !type) {
                alert('Please fill all required fields');
                return;
            }
            
            try {
                let url = '/admin/users';
                let method = 'POST';
                
                // If userId exists, it's an update
                if (userId) {
                    url = `/admin/users/${userId}`;
                    method = 'PUT';
                }
                
                // Create request body
                const requestBody = {
                    username,
                    email,
                    type
                };
                
                // Only include password if it was provided (for updates)
                if (password) {
                    requestBody.password = password;
                }
                
                // Send request
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestBody)
                });
                
                if (response.ok) {
                    userModal.hide();
                    // Refresh the page to show updated data
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(`Error: ${error.message || 'Unknown error'}`);
                }
            } catch (error) {
                alert(`Error: ${error.message}`);
            }
        });
        
        // Delete User
        document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
            try {
                const response = await fetch(`/admin/users/${currentUserId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    deleteModal.hide();
                    // Refresh the page
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(`Error: ${error.message || 'Unknown error'}`);
                }
            } catch (error) {
                alert(`Error: ${error.message}`);
            }
        });
        
        // Setup the Add User button
        document.querySelector('.btn-success').addEventListener('click', addUser);
    </script>
</body>
</html>